
# parsetab.py
# This file is automatically generated. Do not edit.
# pylint: disable=W,C,R
_tabversion = '3.10'

_lr_method = 'LALR'

_lr_signature = 'API API_URL AVAILABLE BOOK BOOKING BOOKING_ID BY CANCEL DATE DETAILS EVENTS FETCH FOR FROM IN LIST MY NUMBER ON OUT PAY PAYMENT_METHOD POLICIES PRICE QUOTED_STRING READ REGION RESERVE SEARCH SELECT SHOW SORT STATUS TICKETS TICKET_ID USINGstatement : book_statement\n| status_statement\n| show_statement\n| select_statement\n| sort_statement\n| fetch_statement\n| reserve_statement\n| region_statement\n| speech_statement\n| list_statement\n| pay_statement\n| cancel_statement\n| search_statement\n| policy_statementsearch_statement : SEARCH FOR QUOTED_STRING IN QUOTED_STRINGpolicy_statement : SHOW POLICIES FOR QUOTED_STRINGbook_statement : BOOK NUMBER TICKETS FOR QUOTED_STRING ON DATEstatus_statement : STATUS BOOKING_IDshow_statement : SHOW AVAILABLE TICKETS IN QUOTED_STRINGselect_statement : SELECT TICKET_IDsort_statement : SORT TICKETS BY PRICEfetch_statement : FETCH TICKETS FROM API API_URLreserve_statement : RESERVE TICKETS FOR QUOTED_STRINGregion_statement : SHOW AVAILABLE TICKETS IN QUOTED_STRINGspeech_statement : READ OUT MY BOOKING DETAILS\n| READ AVAILABLE TICKETS FOR QUOTED_STRINGlist_statement : LIST EVENTSpay_statement : PAY BOOKING_ID USING PAYMENT_METHODcancel_statement : CANCEL BOOKING_ID'
    
_lr_action_items = {'BOOK':([0,],[16,]),'STATUS':([0,],[17,]),'SHOW':([0,],[18,]),'SELECT':([0,],[19,]),'SORT':([0,],[20,]),'FETCH':([0,],[21,]),'RESERVE':([0,],[22,]),'READ':([0,],[23,]),'LIST':([0,],[24,]),'PAY':([0,],[25,]),'CANCEL':([0,],[26,]),'SEARCH':([0,],[27,]),'$end':([1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,29,32,38,40,54,55,57,60,63,64,65,66,67,69,],[0,-1,-2,-3,-4,-5,-6,-7,-8,-9,-10,-11,-12,-13,-14,-18,-20,-27,-29,-16,-21,-23,-28,-19,-22,-25,-26,-15,-17,]),'NUMBER':([16,],[28,]),'BOOKING_ID':([17,25,26,],[29,39,40,]),'AVAILABLE':([18,23,],[30,37,]),'POLICIES':([18,],[31,]),'TICKET_ID':([19,],[32,]),'TICKETS':([20,21,22,28,30,37,],[33,34,35,42,43,49,]),'OUT':([23,],[36,]),'EVENTS':([24,],[38,]),'FOR':([27,31,35,42,49,],[41,44,47,52,59,]),'BY':([33,],[45,]),'FROM':([34,],[46,]),'MY':([36,],[48,]),'USING':([39,],[50,]),'QUOTED_STRING':([41,44,47,52,53,59,61,],[51,54,57,62,63,66,67,]),'IN':([43,51,],[53,61,]),'PRICE':([45,],[55,]),'API':([46,],[56,]),'BOOKING':([48,],[58,]),'PAYMENT_METHOD':([50,],[60,]),'API_URL':([56,],[64,]),'DETAILS':([58,],[65,]),'ON':([62,],[68,]),'DATE':([68,],[69,]),}

_lr_action = {}
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = {}
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'statement':([0,],[1,]),'book_statement':([0,],[2,]),'status_statement':([0,],[3,]),'show_statement':([0,],[4,]),'select_statement':([0,],[5,]),'sort_statement':([0,],[6,]),'fetch_statement':([0,],[7,]),'reserve_statement':([0,],[8,]),'region_statement':([0,],[9,]),'speech_statement':([0,],[10,]),'list_statement':([0,],[11,]),'pay_statement':([0,],[12,]),'cancel_statement':([0,],[13,]),'search_statement':([0,],[14,]),'policy_statement':([0,],[15,]),}

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
   for _x, _y in zip(_v[0], _v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = {}
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> statement","S'",1,None,None,None),
  ('statement -> book_statement','statement',1,'p_statement','book_parser.py',15),
  ('statement -> status_statement','statement',1,'p_statement','book_parser.py',16),
  ('statement -> show_statement','statement',1,'p_statement','book_parser.py',17),
  ('statement -> select_statement','statement',1,'p_statement','book_parser.py',18),
  ('statement -> sort_statement','statement',1,'p_statement','book_parser.py',19),
  ('statement -> fetch_statement','statement',1,'p_statement','book_parser.py',20),
  ('statement -> reserve_statement','statement',1,'p_statement','book_parser.py',21),
  ('statement -> region_statement','statement',1,'p_statement','book_parser.py',22),
  ('statement -> speech_statement','statement',1,'p_statement','book_parser.py',23),
  ('statement -> list_statement','statement',1,'p_statement','book_parser.py',24),
  ('statement -> pay_statement','statement',1,'p_statement','book_parser.py',25),
  ('statement -> cancel_statement','statement',1,'p_statement','book_parser.py',26),
  ('statement -> search_statement','statement',1,'p_statement','book_parser.py',27),
  ('statement -> policy_statement','statement',1,'p_statement','book_parser.py',28),
  ('search_statement -> SEARCH FOR QUOTED_STRING IN QUOTED_STRING','search_statement',5,'p_search_statement','book_parser.py',33),
  ('policy_statement -> SHOW POLICIES FOR QUOTED_STRING','policy_statement',4,'p_policy_statement','book_parser.py',51),
  ('book_statement -> BOOK NUMBER TICKETS FOR QUOTED_STRING ON DATE','book_statement',7,'p_book_statement','book_parser.py',67),
  ('status_statement -> STATUS BOOKING_ID','status_statement',2,'p_status_statement','book_parser.py',86),
  ('show_statement -> SHOW AVAILABLE TICKETS IN QUOTED_STRING','show_statement',5,'p_show_statement','book_parser.py',91),
  ('select_statement -> SELECT TICKET_ID','select_statement',2,'p_select_statement','book_parser.py',108),
  ('sort_statement -> SORT TICKETS BY PRICE','sort_statement',4,'p_sort_statement','book_parser.py',113),
  ('fetch_statement -> FETCH TICKETS FROM API API_URL','fetch_statement',5,'p_fetch_statement','book_parser.py',118),
  ('reserve_statement -> RESERVE TICKETS FOR QUOTED_STRING','reserve_statement',4,'p_reserve_statement','book_parser.py',123),
  ('region_statement -> SHOW AVAILABLE TICKETS IN QUOTED_STRING','region_statement',5,'p_region_statement','book_parser.py',128),
  ('speech_statement -> READ OUT MY BOOKING DETAILS','speech_statement',5,'p_speech_statement','book_parser.py',132),
  ('speech_statement -> READ AVAILABLE TICKETS FOR QUOTED_STRING','speech_statement',5,'p_speech_statement','book_parser.py',133),
  ('list_statement -> LIST EVENTS','list_statement',2,'p_list_statement','book_parser.py',141),
  ('pay_statement -> PAY BOOKING_ID USING PAYMENT_METHOD','pay_statement',4,'p_pay_statement','book_parser.py',146),
  ('cancel_statement -> CANCEL BOOKING_ID','cancel_statement',2,'p_cancel_statement','book_parser.py',154),
]
